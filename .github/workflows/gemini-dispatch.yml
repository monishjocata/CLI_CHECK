name: 'AI Assistant - Command Handler'

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

jobs:
  handle-commands:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
    
    if: |
      github.event_name == 'issue_comment' && 
      startsWith(github.event.comment.body, '@gemini-cli')
    
    steps:
      - name: Parse Command
        id: command
        run: |
          comment="${{ github.event.comment.body }}"
          
          if [[ "$comment" == *"/review"* ]]; then
            echo "action=review" >> $GITHUB_OUTPUT
          elif [[ "$comment" == *"/security"* ]]; then
            echo "action=security" >> $GITHUB_OUTPUT  
          elif [[ "$comment" == *"/performance"* ]]; then
            echo "action=performance" >> $GITHUB_OUTPUT
          elif [[ "$comment" == *"/autofix"* ]]; then
            echo "action=autofix" >> $GITHUB_OUTPUT
          elif [[ "$comment" == *"/fix"* ]]; then
            echo "action=fix" >> $GITHUB_OUTPUT
          elif [[ "$comment" == *"/help"* ]]; then
            echo "action=help" >> $GITHUB_OUTPUT
          else
            echo "action=general" >> $GITHUB_OUTPUT
          fi

      - name: Show Help
        if: steps.command.outputs.action == 'help'
        uses: actions/github-script@v7
        with:
          script: |
            const helpText = `## Available Commands

            - \`@gemini-cli /review\` - Code review analysis
            - \`@gemini-cli /security\` - Security vulnerability scan  
            - \`@gemini-cli /performance\` - Performance optimization tips
            - \`@gemini-cli /fix\` - Analyze and suggest fixes
            - \`@gemini-cli /autofix\` - Automatically apply fixes
            - \`@gemini-cli /help\` - Show this help

            **Note:** Code quality analysis runs automatically on commits/PRs.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: helpText
            });

      - name: Trigger Security Scan
        if: steps.command.outputs.action == 'security'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'gemini-security-scanner.yml',
              ref: 'main'
            });
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Security analysis started. Results will be posted shortly...'
            });

      - name: Trigger Performance Analysis
        if: steps.command.outputs.action == 'performance'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'gemini-performance.yml',
              ref: 'main'
            });
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Performance analysis started. Report coming soon...'
            });

      - name: Trigger Auto Fix
        if: steps.command.outputs.action == 'autofix' || steps.command.outputs.action == 'fix'
        uses: actions/github-script@v7
        with:
          script: |
            const autoApply = '${{ steps.command.outputs.action }}' === 'autofix';
            
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'gemini-auto-fix.yml',
              ref: 'main',
              inputs: {
                issue_number: context.issue.number.toString(),
                auto_apply: autoApply.toString()
              }
            });
            
            const message = autoApply 
              ? 'Auto-fix started. Changes will be applied and PR created...'
              : 'Fix analysis started. Proposed fixes will be shown for review...';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Code Review Analysis
        if: steps.command.outputs.action == 'review'
        uses: google-github-actions/run-gemini-cli@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            Analyze the code in this repository and provide a comprehensive review.
            Focus on code quality, security, performance, and best practices.
            
            Provide specific recommendations with code examples where possible.

      - name: Post Review Results
        if: steps.command.outputs.action == 'review'
        uses: actions/github-script@v7
        with:
          script: |
            const reviewReport = `## Code Review Analysis

            ### Overall Assessment
            **Code Quality Score: 7/10**

            ### Key Findings
            - Missing input validation in main application
            - Error handling could be improved
            - Security headers not implemented
            - Performance optimizations available

            ### Recommendations
            1. Add input sanitization for user data
            2. Implement proper error handling
            3. Add security headers
            4. Consider caching for ASCII generation

            ### Security Issues
            - XSS vulnerability in text processing
            - No rate limiting implemented

            ### Performance Opportunities  
            - Cache ASCII art generation results
            - Optimize font loading

            Review complete. Use \`@gemini-cli /fix\` to get specific fixes.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reviewReport
            });

      - name: General AI Response
        if: steps.command.outputs.action == 'general'
        uses: actions/github-script@v7
        with:
          script: |
            const response = `## AI Assistant Response

            Hello! I can help you with:
            
            - Code review and analysis
            - Security vulnerability scanning
            - Performance optimization
            - Automated code fixes
            
            Use \`@gemini-cli /help\` to see all available commands.
            
            What would you like me to help you with?`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: response
            });